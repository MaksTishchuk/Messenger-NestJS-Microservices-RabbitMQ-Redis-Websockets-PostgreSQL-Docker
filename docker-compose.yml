version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
    volumes:
      - /var/lib/rabbitmq

  auth:
    container_name: auth
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev auth # overrides CMD from dockerfile

  presence:
    container_name: presence
    build:
      context: ./
      dockerfile: ./apps/presence/Dockerfile
    ports: # necessary for websockets
      - '6000:6000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - redis
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev presence # overrides CMD from dockerfile

  chat:
    container_name: chat
    build:
      context: ./
      dockerfile: ./apps/chat/Dockerfile
    ports:
      - '7000:7000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - redis
      - presence
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev chat # overrides CMD from dockerfile

  api:
    container_name: api
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    ports:
      - '4000:5000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - auth
      - presence
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev api

  postgres:
    container_name: postgres
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data

  postgres_admin:
    container_name: postgres-admin
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '15432:80'

  redis:
    container_name: redis
    image: redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    env_file:
      - .env
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data